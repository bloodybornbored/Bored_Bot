import os
import json
from flask import Flask, request
from telegram import Update, InputFile
from telegram.ext import (
    Application, CommandHandler, ContextTypes,
    MessageHandler, filters
)
from utils.logger import log_event
from utils.pdf_generator import generate_pdf
from utils.mindmap_generator import generate_mindmap

TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("RENDER_EXTERNAL_URL")

app = Flask(__name__)

application = Application.builder().token(TOKEN).build()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ç—Ä–µ–∫–∏–Ω–≥–∞.\n"
        "üìå –ö–æ–º–∞–Ω–¥—ã:\n"
        "/add [—Ç–µ–∫—Å—Ç] ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n"
        "/training [—Ç–µ–∫—Å—Ç] ‚Äî —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ (Home –∏–ª–∏ GYM)\n"
        "/reading [—Ç–µ–∫—Å—Ç] ‚Äî –∑–∞–º–µ—Ç–∫–∞ –ø–æ –∫–Ω–∏–≥–µ\n"
        "/films [—Ç–µ–∫—Å—Ç] ‚Äî –∑–∞–º–µ—Ç–∫–∞ –ø–æ —Ñ–∏–ª—å–º—É\n"
        "/games [—Ç–µ–∫—Å—Ç] ‚Äî –∑–∞–º–µ—Ç–∫–∞ –ø–æ –∏–≥—Ä–µ\n"
        "/supplements [—Ç–µ–∫—Å—Ç] ‚Äî –ø—Ä–∏—ë–º –¥–æ–±–∞–≤–∫–∏\n"
        "/report ‚Äî –æ—Ç—á—ë—Ç –ø–æ –≤—Å–µ–º –∑–∞–ø–∏—Å—è–º\n"
        "/pdf ‚Äî —ç–∫—Å–ø–æ—Ä—Ç PDF\n"
        "/mindmap ‚Äî mind map\n"
        "/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    )

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ª–æ–≥–µ—Ä
async def handle_entry(update: Update, context: ContextTypes.DEFAULT_TYPE, entry_type: str):
    text = ' '.join(context.args)
    log_event(entry_type, text)
    await update.message.reply_text(f"‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ {entry_type}: {text}")

# –ö–æ–º–∞–Ω–¥—ã
async def add(update: Update, context: ContextTypes.DEFAULT_TYPE): await handle_entry(update, context, "task")
async def training(update: Update, context: ContextTypes.DEFAULT_TYPE): await handle_entry(update, context, "training")
async def reading(update: Update, context: ContextTypes.DEFAULT_TYPE): await handle_entry(update, context, "reading")
async def supplements(update: Update, context: ContextTypes.DEFAULT_TYPE): await handle_entry(update, context, "supplements")
async def films(update: Update, context: ContextTypes.DEFAULT_TYPE): await handle_entry(update, context, "films")
async def games(update: Update, context: ContextTypes.DEFAULT_TYPE): await handle_entry(update, context, "games")

# –ö–æ–º–∞–Ω–¥–∞ /report
async def report(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        with open("db.json", "r", encoding="utf-8") as f:
            data = json.load(f)
        if not data:
            raise ValueError
    except:
        await update.message.reply_text("–ó–∞–ø–∏—Å–µ–π –Ω–µ—Ç.")
        return
    text = "\n".join([f"{entry['type'].capitalize()}: {entry['content']}" for entry in data])
    await update.message.reply_text("üìù –û—Ç—á—ë—Ç:\n" + text)

# PDF
async def pdf(update: Update, context: ContextTypes.DEFAULT_TYPE):
    file_path = generate_pdf()
    with open(file_path, "rb") as f:
        await update.message.reply_document(InputFile(f, filename="report.pdf"))

# Mind Map
async def mindmap(update: Update, context: ContextTypes.DEFAULT_TYPE):
    file_path = generate_mindmap()
    with open(file_path, "rb") as f:
        await update.message.reply_document(InputFile(f, filename="mindmap.pdf"))

# Help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await start(update, context)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def fallback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

# –†–æ—É—Ç –≤–µ–±—Ö—É–∫–∞
@app.route(f"/{TOKEN}", methods=["POST"])
def telegram_webhook():
    update = Update.de_json(request.get_json(force=True), application.bot)
    application.update_queue.put_nowait(update)
    return "ok", 200

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
@app.before_first_request
def set_webhook():
    application.bot.set_webhook(url=f"{WEBHOOK_URL}/{TOKEN}")
    print(f"üîó Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}/{TOKEN}")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("help", help_command))
application.add_handler(CommandHandler("add", add))
application.add_handler(CommandHandler("training", training))
application.add_handler(CommandHandler("reading", reading))
application.add_handler(CommandHandler("films", films))
application.add_handler(CommandHandler("games", games))
application.add_handler(CommandHandler("supplements", supplements))
application.add_handler(CommandHandler("report", report))
application.add_handler(CommandHandler("pdf", pdf))
application.add_handler(CommandHandler("mindmap", mindmap))
application.add_handler(MessageHandler(filters.TEXT, fallback))

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
